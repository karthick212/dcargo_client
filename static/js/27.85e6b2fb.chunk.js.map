{"version":3,"sources":["API.js","pages/views/viewList.js","pages/modal.js","pages/views/viewAccept.js"],"names":["axios","create","baseURL","ViewList","props","className","this","header","addnew","color","onClick","hover","entriesOptions","pagesAmount","pagingTop","searchTop","searchBottom","data","bordered","scrollY","scrollX","React","Component","AppModal","state","modalOpen","open","size","isOpen","style","display","modalheader","modalbody","textAlign","undefined","button1","padding","clickButton1","button2","clickButton2","button3","clickButton3","App","clickView","res","setState","modalopen","filepath","entertext","tempid","id","clickStatus","workstatus","status","post","then","loadDate","alert","modalClick","onUpdate","clickRestart","handleChange","selectedOption","console","log","tempValue","userid","onChange","e","index","target","selectedIndex","optionElementId","childNodes","getAttribute","value","history","push","deleteItem","window","confirm","action","context","userdata","location","get","params","email","worktype","viewdata","componentDidMount","filename","isError","error","successMsg","imgWidth","typingsuccess1","src","width","name","placeholder","height","aria-hidden","columns","label","field","sort","rows","map","i","workType","date","date1","time","time1","isAccept","isReject"],"mappings":"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","file":"static/js/27.85e6b2fb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: `https://console.freelancetypers.com/api/`\r\n  // baseURL: `http://3.230.230.205:4000/api/`\r\n  // baseURL: `http://localhost:4000/api/`\r\n});","import React from 'react'\r\nimport { Card, Button, CardHeader, CardBody } from 'reactstrap';\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\n\r\nexport default class ViewList extends React.Component {\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\trender()\r\n\t{\t\r\n\t\treturn(\r\n\t\t\t<> \r\n\t\t\t<div> \r\n\t\t\t<Card>\r\n\t\t\t<CardHeader>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t<h4 className=\"col-10 text-left\">{this.props.header}</h4>\r\n\t\t\t{this.props.addnew?<div className=\"col-2\"><Button color=\"primary\" onClick={this.props.addnew}>Add New</Button></div>:''} \r\n\t\t\t</div>\r\n\t\t\t</CardHeader>      \r\n\t\t\t<CardBody>\r\n\t\t\t<MDBDataTableV5\r\n\t\t\thover entriesOptions={[10, 50, 100,250]} pagesAmount={4}\r\n\t\t\tpagingTop searchTop searchBottom={false} \r\n\t\t\tdata={this.props.data}\r\n\t\t\tbordered scrollY scrollX \r\n\t\t\t/>\r\n\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t\t</div>\r\n\r\n\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n}","import React from 'react'\r\nimport { Modal, ModalHeader,ModalBody,ModalFooter,Button } from 'reactstrap'\r\n\r\nclass AppModal extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tmodalOpen: this.props.open\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\t\t\r\n\t\tlet modal= (\r\n\t\t\t<div>\r\n\t\t\t<Modal size=\"xl\" isOpen={this.state.modalOpen}>\r\n\t\t\t<ModalHeader className=\"App text-center\" style={{display:'block'}}>{this.props.modalheader}</ModalHeader>\r\n\t\t\t<ModalBody>\r\n\t\t\t<div className=\"row\">      \r\n\t\t\t<div className=\"col-12 text-center\">\r\n\t\t\t{this.props.modalbody}\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</ModalBody>\r\n\t\t\t<ModalFooter style={{textAlign:'center',display:'block'}}>\r\n\t\t\t{(this.props.button1!==undefined && this.props.button1!=='')?<Button style={{color:'yellow',padding: '20px 25px !important'}} color=\"primary\" className=\"btn hero-btn1\" onClick={this.props.clickButton1}>{this.props.button1}</Button>:''}\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t{(this.props.button2!==undefined && this.props.button2!=='')?<Button style={{padding: '20px 25px !important'}} color=\"primary\" className=\"btn hero-btn1\" onClick={this.props.clickButton2}>{this.props.button2}</Button>:''}\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t{(this.props.button3!==undefined && this.props.button3!=='')?<Button style={{padding: '20px 25px !important'}} color=\"secondary\" className=\"btn hero-btn1\" onClick={this.props.clickButton3}>{this.props.button3}</Button>:''}\r\n\t\t\t</ModalFooter>\r\n\r\n\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\r\n\t\t\treturn modal\r\n\t\t}\r\n\r\n\t}\r\n\r\n\texport default AppModal;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\n\r\nimport ViewList from './viewList'\r\nimport Modal from '../modal'\r\nimport axios from '../../API.js'\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewdata: [],\r\n      tempValue: '', tempid: '',\r\n      selectedOption: null, modalopen: false,\r\n      filename: '', filepath: '', entertext: '', isError: false,\r\n      error: { entertext: '' },\r\n      successMsg: '', imgWidth: null\r\n    }\r\n  }\r\n  clickView = (res) => {\r\n    this.setState({ modalopen: !this.state.modalopen, filepath: res.filepath, entertext: res.entertext, tempid: res.id })\r\n  }\r\n  clickStatus = (id,workstatus) => {\r\n    let data = {}\r\n    data.userid = \"1\"\r\n    data.status = workstatus\r\n    data.id = id\r\n    axios.post(\"/userWorks/Update\", data).then(res => {\r\n      if (res.data.status === 'success') {\r\n        //this.props.history.push('/Requesters')\r\n        // window.location.reload()\r\n        this.loadDate()\r\n        alert('Requester Details Updated Successfully..!!')\r\n      }\r\n    })\r\n  }\r\n  modalClick = (status) => {\r\n    // console.log(status)\r\n    // this.setState({tempValue:status})\r\n    this.onUpdate(status)\r\n  }\r\n  clickRestart = () => {\r\n    this.setState({ modalopen: !this.state.modalopen })\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n    console.log(`Option selected:`, selectedOption);\r\n  };\r\n  onUpdate = (tempValue) => {\r\n    let data = this.state\r\n    data.userid = \"1\"\r\n    data.status = tempValue\r\n    data.id = this.state.tempid\r\n    axios.post(\"/userWorks/Update\", data).then(res => {\r\n      if (res.data.status === 'success') {\r\n        //this.props.history.push('/Requesters')\r\n        //window.location.reload()\r\n        this.clickRestart()\r\n        this.loadDate()\r\n        alert('Requester Details Updated Successfully..!!')\r\n      }\r\n    })\r\n  }\r\n  onChange = (e) => {\r\n    const index = e.target.selectedIndex;\r\n    const optionElement = e.target.childNodes[index];\r\n    const optionElementId = optionElement.getAttribute('id');\r\n    console.log(optionElementId, e.target.value)\r\n    this.setState({ tempid: optionElementId, tempValue: e.target.value })\r\n  }\r\n  addnew = () => {\r\n    this.props.history.push('/requester/add');\r\n  }\r\n  deleteItem = (id) => {\r\n    var r = window.confirm('Are u want to Delete?')\r\n    if (r === true) {\r\n      axios.post(\"/Requesters/Update\", { id: id, action: 'del', userid: this.context.userdata.userid }).then(res => {\r\n        if (res.status === 'success')\r\n          this.loadDate();\r\n      })\r\n    }\r\n  }\r\n  loadDate = () => {\r\n    if(this.props.location.state) {\r\n      let state=this.props.location.state\r\n      axios.get(\"/userWorks\",{params:{email:state.email,worktype:state.worktype}}).then(res => {\r\n        if (res.data.status === 'success')\r\n          this.setState({ viewdata: res.data.data })\r\n      })\r\n    }    \r\n  }\r\n  componentDidMount = () => {\r\n    console.log(this.props.location.state)\r\n    this.loadDate();\r\n  }\r\n  render() {\r\n    const typingsuccess1 = (\r\n      <>\r\n        <div className=\"row\" style={{ padding: '1em' }}>\r\n          <div className=\"col-6\">\r\n            <div className=\"container-outer mb-4\">\r\n              <img id=\"map\" src={this.state.filepath} width={this.state.imgWidth === null ? \"100%\" : this.state.imgWidth} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-6\">\r\n\r\n            <textarea name=\"entertext\" className=\"col-12 mb-4\" placeholder=\"Please type here\" style={{ height: '24em' }} onChange={this.onChange} value={this.state.entertext}></textarea>\r\n            {this.state.error.entertext}\r\n            {this.state.successMsg !== '' ? <div className=\"success\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i> {this.state.successMsg}</div> : ''}\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </>\r\n    )\r\n\r\n    const { selectedOption } = this.state;\r\n    const options = [\r\n      { value: 'Select', label: 'Select' },\r\n      { value: 'Accepted', label: 'Accepted' },\r\n      { value: 'Rejected', label: 'Rejected' },\r\n    ];\r\n\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Work Type',\r\n          field: 'worktype',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Time',\r\n          field: 'time',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Status',\r\n          field: 'status',\r\n        },\r\n        // {\r\n        //   label: 'Change Status',\r\n        //   field: 'changestatus',\r\n        // },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n        }],\r\n      rows: [...this.state.viewdata.map((res, i) => ({\r\n        id: res.id,\r\n        email: res.email,\r\n        worktype: res.workType,\r\n        date: res.date1,\r\n        time: res.time1,\r\n        status: res.isAccept ? 'Accepted' : res.isReject ? 'Rejected' : 'Pending',\r\n        // changestatus: <><select\r\n        //   onChange={this.onChange}\r\n        //   options={options}\r\n        // ><option id={res.id} value=\"Select\">Select</option>\r\n        //   <option id={res.id} value=\"Accepted\">Accepted</option>\r\n        //   <option id={res.id} value=\"Rejected\">Rejected</option> </select></>,\r\n        action: <>\r\n        <div className=\"btn btn-success btn-sm\" onClick={() => this.clickStatus(res.id,'Accepted')}>Accept</div>{' '}\r\n        <div className=\"btn btn-danger btn-sm\" onClick={() => this.clickStatus(res.id,'Rejected')}>Reject</div>{' '}\r\n        <div className=\"btn btn-info btn-sm\" onClick={() => this.clickStatus(res.id,'Pending')}>Pending</div>{' '}\r\n        <div className=\"btn btn-primary btn-sm\" onClick={() => this.clickView(res)}>View</div>\r\n        </>\r\n        // <div className=\"btn btn-danger btn-sm\" onClick={() => this.onUpdate(res.id)}>Submit</div>&nbsp;\r\n      }))]\r\n    }\r\n    let view = (\r\n      <>\r\n\r\n        <div className=\"menubar\">\r\n          {this.state.modalopen ? <Modal open={true} button1='Accept' clickButton1={() => this.modalClick('Accepted')} button2='Reject' clickButton2={() => this.modalClick('Rejected')} button3='Close' clickButton3={this.clickRestart} modalheader=\"Quality Checking\" modalbody={typingsuccess1} /> : ''}\r\n\r\n          <ViewList header=\"Work Status\" data={data} />\r\n        </div>\r\n\r\n      </>\r\n    )\r\n    return view;\r\n  }\r\n}\r\nexport default App;"],"sourceRoot":""}