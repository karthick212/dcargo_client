{"version":3,"sources":["API.js","common.js","views/pages/login/Login.js"],"names":["axios","create","baseURL","validateEmail","email","test","clear","state","exceptions","splitException","split","Object","keys","forEach","key","includes","validateFields","emptyFields","emailFields","data","error","emptyKeyArr","map","m","emailKeyArr","isError","errVal","filter","className","class","aria-hidden","Login","props","onChange","event","target","name","value","setState","onSubmit","formData","username","password","console","log","post","then","response","cnt","localStorage","setItem","btoa","window","location","replace","catch","isSuccess","md","type","placeholder","autoComplete","this","xs","color","onClick","React","Component"],"mappings":"6KAAA,sBAEeA,QAAMC,OAAO,CAC1BC,QAAQ,8C,iCCHV,sDACaC,EAAc,SAACC,GAE3B,MADW,4JACDC,KAAKD,IAGHE,EAAM,SAACC,GAAuB,IAAjBC,EAAgB,uDAAL,GAC9BC,EAAeD,EAAWE,MAAM,KAKtC,OAJAC,OAAOC,KAAKL,GAAOM,SAAQ,SAAAC,GACtBL,EAAeM,SAASD,KAC3BP,EAAMO,GAAK,OAENP,GAGKS,EAAe,SAACT,GAAuC,IAAjCU,EAAgC,uDAApB,GAAGC,EAAiB,uDAAL,GACvDC,EAAKZ,EACPa,EAAMd,EAAMa,EAAKC,OAEfC,EAAYJ,EAAYK,KAAI,SAAAC,GAAC,OAAEA,EAAET,OACjCU,EAAYN,EAAYI,KAAI,SAAAC,GAAC,OAAEA,EAAET,OAevC,OAdAK,EAAKM,SAAQ,EAEbd,OAAOC,KAAKO,GAAMN,SAAQ,SAAAC,GACxB,GAAGO,EAAYN,SAASD,IAAkB,KAAZK,EAAKL,GAAW,CAC7CK,EAAKM,SAAQ,EACb,IAAIC,EAAOT,EAAYU,QAAO,SAAAJ,GAAC,OAAEA,EAAET,KAAKA,KAAK,GAAGY,OAChDN,EAAMN,GAAM,0BAAMc,UAAU,SAAQ,uBAAGC,MAAM,2BAA2BC,cAAY,SAAxE,IAAqFJ,QAE9F,GAAGF,EAAYT,SAASD,KAAOX,EAAcgB,EAAKL,IAAO,CAC5DK,EAAKM,SAAQ,EACb,IAAIC,EAAOR,EAAYS,QAAO,SAAAJ,GAAC,OAAEA,EAAET,KAAKA,KAAK,GAAGY,OAChDN,EAAMN,GAAM,0BAAMc,UAAU,SAAQ,uBAAGC,MAAM,2BAA2BC,cAAY,SAAxE,IAAqFJ,OAG7FP,I,oICdFY,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,SAAW,SAACC,GACV,IAAMf,EAAO,EAAKZ,MAClBY,EAAKe,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MACvC,EAAKC,SAAS,CAAEnB,UATC,EAWnBoB,SAAW,WACT,IAAIC,EAAW,GACfA,EAASC,SAAW,EAAKlC,MAAMkC,SAC/BD,EAASE,SAAW,EAAKnC,MAAMmC,SAC/BC,QAAQC,IAAIJ,GACZxC,IAAM6C,KAAK,kBAAmBL,GAC3BM,MAAK,SAACC,GACFA,EAAS5B,KAAKA,KAAK,GAAG6B,IAAI,IAE3BC,aAAaC,QAAQ,QAAQC,KAAK,wBAClCC,OAAOC,SAASC,QAAQ,gBAIzBC,OAAM,SAACnC,QAvBZ,EAAKb,MAAQ,CACXkC,SAAU,GAAIC,SAAU,GAAIc,UAAW,GAAI/B,QAAS,IAHrC,E,qDA8BjB,OACE,yBAAKG,UAAU,sDACb,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAMA,UAAU,0BACd,kBAAC,IAAD,CAAM6B,GAAG,KACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO7B,UAAU,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,qCACA,uBAAGA,UAAU,cAAb,2BACA,kBAAC,IAAD,CAAaA,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOQ,KAAK,eAGhB,kBAAC,IAAD,CAAQsB,KAAK,OAAOC,YAAY,WAAWC,aAAa,WAAWxB,KAAK,WAAWH,SAAU4B,KAAK5B,SAAUI,MAAOwB,KAAKtD,MAAMkC,YAEhI,kBAAC,IAAD,CAAab,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOQ,KAAK,sBAGhB,kBAAC,IAAD,CAAQsB,KAAK,WAAWC,YAAY,WAAWC,aAAa,mBAAmBxB,KAAK,WAAWH,SAAU4B,KAAK5B,SAAUI,MAAOwB,KAAKtD,MAAMmC,YAE5I,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMoB,GAAG,KACP,kBAAC,IAAD,CAASC,MAAM,UAAUnC,UAAU,OAAOoC,QAASH,KAAKtB,UAAxD,uB,GA5DN0B,IAAMC,WA0FXnC","file":"static/js/31.8e12cc9e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: `https://console.freelancetypers.com/api/`\r\n  // baseURL: `http://3.230.230.205:4000/api/`\r\n  // baseURL: `http://localhost:4000/api/`\r\n});","import React from 'react'\r\nexport const validateEmail=(email)=> {\r\n\tconst re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\treturn re.test(email);\r\n}\r\n\r\nexport const clear=(state,exceptions='')=>{\r\n\tconst splitException=exceptions.split(\",\");\r\n\tObject.keys(state).forEach(key=> {\r\n\t\tif(!splitException.includes(key))\r\n\t\t\tstate[key]=''\r\n\t});\r\n\treturn state;\r\n}\r\n\r\nexport const validateFields=(state,emptyFields=[],emailFields=[])=>{\r\n\tconst data=state;\r\n\tlet error=clear(data.error)\r\n\r\n\tconst emptyKeyArr=emptyFields.map(m=>m.key)\r\n\tconst emailKeyArr=emailFields.map(m=>m.key)\r\n\tdata.isError=false;\r\n\r\n\tObject.keys(data).forEach(key=> {\r\n\t\t if(emptyKeyArr.includes(key)&&data[key]==='') {\r\n\t\t \tdata.isError=true;\r\n\t\t \tlet errVal=emptyFields.filter(m=>m.key==key)[0].errVal\r\n\t\t \terror[key]=(<span className=\"error\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> {errVal}</span>)\r\n\t\t}\r\n\t\telse if(emailKeyArr.includes(key)&&!validateEmail(data[key])) {\r\n\t\t \tdata.isError=true;\r\n\t\t \tlet errVal=emailFields.filter(m=>m.key==key)[0].errVal\r\n\t\t \terror[key]=(<span className=\"error\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> {errVal}</span>)\r\n\t\t}\r\n\t});\r\n\treturn data;\r\n}\r\n\r\nexport const customValidation=(state,key,errVal)=>{\r\n\tconst data=state;\r\n\tlet error=data.error\r\n\r\n\terror[key]=(<span className=\"error\">{errVal}</span>)\r\n\tdata.isError=true\r\n\treturn data\r\n}\r\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { validateEmail, clear, validateFields, customValidation } from '../../../common.js'\nimport axios from '../../../API.js'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '', password: '', isSuccess: '', isError: ''\n    }\n  }\n  onChange = (event) => {\n    const data = this.state\n    data[event.target.name] = event.target.value\n    this.setState({ data })\n  }\n  onSubmit = () => {\n    var formData = {}\n    formData.username = this.state.username\n    formData.password = this.state.password\n    console.log(formData)\n    axios.post(\"/Authentication\", formData)\n      .then((response) => {\n        if(response.data.data[0].cnt>0){\n          // this.props.history.push('/dashboard')\n          localStorage.setItem('token',btoa('freelancetyperstrue'))\n          window.location.replace('/Console')\n        }      \n        // console.log(response)\n        // alert(\"The file is successfully uploaded\");\n      }).catch((error) => {\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"6\">\n              <CCardGroup>\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <CInputGroup className=\"mb-3\">\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-user\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\" name='username' onChange={this.onChange} value={this.state.username} />\n                      </CInputGroup>\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-lock-locked\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" name='password' onChange={this.onChange} value={this.state.password} />\n                      </CInputGroup>\n                      <CRow>\n                        <CCol xs=\"6\">\n                          <CButton color=\"primary\" className=\"px-4\" onClick={this.onSubmit}>Login</CButton>\n                        </CCol>\n                        {/* <CCol xs=\"6\" className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                      </CCol> */}\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n                {/* <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                      labore et dolore magna aliqua.</p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard> */}\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n    )\n  }\n}\n\nexport default Login\n"],"sourceRoot":""}